
@using Template.Domain.Model
@model Template.Domain.Model.Evaluacion

@{
    ViewBag.Titulo = "Menú";
    Layout = "~/Views/Shared/_Main.cshtml";
    var Tipos = (List<Tipo>)ViewBag.Tipos;
}

<div class="row-fluid">
    <div class="toolbar">
        <div class="row-fluid mb0">

            <div class="span6">
                @Html.Label("TipoEval", "Tipo de evaluación")
                <select id="Tipo" name="Tipo" class="input-block-level" data-selectpicker>
                    <option value="0">Seleccione...</option>
                    @foreach (var Tipo_ in Tipos)

                    {
                        {
                            var selected = "0";

                            <option value="@Tipo_.id" @selected>@Tipo_.nombre</option>
                        }
                    }
                </select>
            </div>


            <div class="span6">
                @Html.Label("Nombre", "Nombre (Evaluación)")
                @Html.TextBox("Nombre", null, new { @class = "input-block-level", @placeholder = "Titulo de la Evaluación" })
            </div>

        </div>

        <div class="row-fluid mb0">
            <div class="span12">
                <a href="javascript:void(0);" class="btn btn-warning pull-left" id="btnClear">
                    <i class="icon-eraser pr8"></i>Limpiar
                </a>
                <a href="javascript:void(0);" class="btn btn-primary pull-right" id="btnQuerye">
                    <i class="icon-search pr8"></i>Consultar
                </a>
            </div>
        </div>
    </div>
</div>

<div class="row-fluid">
    <div class="span12">
        <table id="GridMenu" class="table table-condensed table-hover table-striped table-bordered table-responsive" data-bootgrid data-case-sensitive="false">
            <thead>
                <tr>
                    <th data-column-id="Id" data-identifier="true" data-visible="false" data-visible-in-selection="false" data-searchable="false"></th>
                    <th data-header-align="center" data-css-class="text-center text-middle" data-column-id="Acciones">Acciones</th>
                    <th data-header-align="center" data-css-class="text-center text-middle" data-column-id="id">Código</th>
                    <th data-header-align="center" data-css-class="text-center text-middle" data-column-id="tipoEval">Tipo</th>
                    <th data-header-align="center" data-css-class="text-justify text-middle" data-column-id="nombre">Nombre</th>
                    <th data-header-align="center" data-css-class="text-center text-middle" data-column-id="descripcion">Descripcion</th>
                    <th data-header-align="center" data-css-class="text-center text-middle" data-column-id="fechaCreacion">Creación</th>
                    <th data-header-align="center" data-css-class="text-center text-middle" data-column-id="fechaModificacion">Modificación</th>

                </tr>
            </thead>
        </table>
    </div>
</div>

<script>
    $(function () {
        var btnClear = $("#btnClear");
        var btnQuerye = $("#btnQuerye");
        var GridMenu = $("#GridMenu");
        var Nombre = $("#Nombre");
        var Tipo = $("#Tipo");
     
        var fCreacion = $("#fCreacion");
        var fModificacion = $("#fModificacion");

        $(GridMenu).bootgrid({
            customButtons: [
          
                {
                    id: "btnState",
                    tooltip: "Filtrar por Activo/Inactivo",
                    icon: ["icon-ok", "icon-remove"],
                    style: ["success", "danger"],
                    label: ["Activo", "Inactivo"],
                    type: "toggle",
                    width: 70
                }
            ]
        })
            .on("loaded.rs.jquery.bootgrid", function (e) {
                e.preventDefault();

                var btnAssignPersona = $(this).find(".assignpersona");
                var btnEnviarEvaluacion = $(this).find(".enviarevaluacion");
                var btnVerPreguntasEvaluacion = $(this).find(".verpreguntasevaluacion");

                var btnEdit = $(this).find(".edit");
                var btnRemove = $(this).find(".remove");


                $(btnEnviarEvaluacion).click(function (e_) {
                    e_.preventDefault();

                    var Id = $(this).data("id");
                    EnviarEvaluacion(Id);
                });
                $(btnVerPreguntasEvaluacion).click(function (e_) {
                    e_.preventDefault();

                    var Id = $(this).data("id");
                    VerPreguntasEvaluacion(Id);
                });
                $(btnAssignPersona).click(function (e_) {
                    e_.preventDefault();

                    var Id = $(this).data("id");
                    AssignPersona(Id);
                });

                $(btnEdit).click(function (e_) {
                    e_.preventDefault();

                    var Id = $(this).data("id");
                    Edit(Id);
                });

                $(btnRemove).click(function (e_) {
                    e_.preventDefault();

                    var Id = $(this).data("id");
                    Remove(Id);
                });
            });

        $(btnQuerye).click(function (e) {
            e.preventDefault();
            var Estado = $.find("#GridMenu_btnState");

            $(GridMenu).bootgrid("clear");

            App.AjaxCall({
                Url: '@Url.Action("VerFormularioEvaluacion")',
                Metodo: 'POST',
                ConvertirParametros: true,
                ParametrosAjax: {
                    Estado: true
                    //Estado: $(Estado).prop("checked")
                },
                Callback: function (Resultado) {
                    if (Resultado && !Resultado.Error && Resultado.Data && Resultado.Data.length > 0) {
                        $(GridMenu).bootgrid("append", Resultado.Data);
                    }
                }
            });
        });


        $(btnClear).click(function (e) {
            e.preventDefault();

            $(Nombre).val("");
   
            $(Tipo).val("");
            $(GridMenu).bootgrid("clear");
            $($.find("#GridMenu_btnState")).bootstrapToggle("on");
        });

        @*$(btnQuerye).click(function (e) {
            e.preventDefault();
            var Estado = $.find("#GridMenu_btnState");

            $(GridMenu).bootgrid("clear");

            App.AjaxCall({
                Url: '@Url.Action("FindByIdEmpleado")',
                Metodo: 'POST',
                ConvertirParametros: true,
                ParametrosAjax: {
                    idEstado : "1"
                },
                Callback: function (Resultado) {
                    if (Resultado && !Resultado.Error && Resultado.Data && Resultado.Data.length > 0) {
                        $(GridMenu).bootgrid("append", Resultado.Data);
                    }
                }
            });
        });*@

        $(document).on("click", "#GridMenu_btnNew", function (e) {
            e.preventDefault();

            App.ShowModalWithOptions({
                Url: "@Url.Action("Form")"
            });
        });

        function EnviarEvaluacion(Id) {
    		var Url_ = "@Url.Action("EnviarEvaluacion", new { Id = "000" })";
    		Url_ = Url_.replace("000", Id);

    		App.ShowModalWithOptions({
    			Url: Url_
    		});
        }
        function VerPreguntasEvaluacion(Id) {
            var Url_ = "@Url.Action("VerPreguntasEvaluacion", new { Id = "000" })";
            Url_ = Url_.replace("000", Id);

            App.ShowModalWithOptions({
                Url: Url_
            });
        }

        function AssignPersona(Id) {
            var Url_ = "@Url.Action("AssignPersona", new { Id = "000" })";
            Url_ = Url_.replace("000", Id);

            App.ShowModalWithOptions({
                Url: Url_
            });
        }

        function Edit(Id) {
            var Url_ = "@Url.Action("Form", new {Id = "000"})";
            Url_ = Url_.replace("000", Id);

            App.ShowConfirm({
                Content: "¿Está seguro(a) que desea <strong>Editar</strong> la evaluacion?",
                Callback: function () {
                    App.ShowModalWithOptions({
                        Url: Url_
                    });
                }
            });
        }

        function Remove(Id) {
            App.ShowConfirm({
                Content: "¿Está seguro(a) que desea <strong>Borrar</strong> la evaluación?",
                Callback: function () {
                    App.AjaxCall({
                        Url: '@Url.Action("Remove")',
                        Metodo: "POST",
                        ConvertirParametros: true,
                        ParametrosAjax: {
                            Id: Id
                        },
                        Callback: function (Resultado) {
                            if (Resultado && !Resultado.Error && Resultado.Message) {
                                $(btnQuery).click();
                                App.ShowMessage(Resultado.Message, MessageType.Success);
                            }
                            if (Resultado && Resultado.Error && Resultado.Message) App.ShowMessage(Resultado.Message, MessageType.Error);
                        }
                    });
                }
            });
        }
    });
</script>
