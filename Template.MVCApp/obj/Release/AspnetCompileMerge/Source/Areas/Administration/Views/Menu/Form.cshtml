@model Menu
@{
    var Id = Utility.GetRandomId();
    var Icono = Model == null ? "icon-plus-sign-alt" : "icon-edit";
    var Titulo = Model == null ? "Creación" : "Edición";

    var MenuId = Model == null ? 0 : Model.Id;
    var MenuPadreId = Model == null ? 0 : Model.Menu_Id;
    var Url_ = Model == null ? "" : Model.Url;
    var Icono_ = Model == null ? "" : Model.Icono;
    var Texto = Model == null ? "" : Model.Texto;
    var Ayuda = Model == null ? "" : Model.Ayuda;
    var Orden = Model == null ? 0 : Model.Orden;
    var Estado = Model != null && Model.Activo;

    var MenusPadre = (List<Menu>)ViewBag.MenusPadre;
    var Iconos = (List<Icono>)ViewBag.Iconos;
}

<div id="@Id">
    <div class="modal-header">
        <h4><i class="@Icono mr8 text-danger"></i>@Titulo de un Menu</h4>
        <hr />
    </div>
    <div class="modal-body">
        @Html.Hidden("Id", MenuId)

        @if (Model != null)
        {
            <div class="row-fluid">
                <div class="span6">
                    @Html.Label("Estado", "Estado")
                    @Html.CheckBox("Estado", Estado, new { @checked = true })
                </div>
            </div>
        }

        <div class="row-fluid">
            <div class="span6">
                @Html.Label("MenuId", "Menú Padre")
                <select id="MenuId" name="MenuId" class="input-block-level" data-selectpicker>
                    <option value="">Seleccione...</option>
                    @foreach (var Menu_ in MenusPadre)
                    {
                        {
                            var selected = Menu_.Id == MenuPadreId ? "selected" : "";

                            <option data-icon="@Menu_.Icono mr8" value="@Menu_.Id" @selected>@Menu_.Texto</option>
                        }
                    }
                </select>
            </div>
            <div class="span6">
                @Html.Label("Url_", "Url")
                @Html.TextBox("Url_", Url_, new { @class = "input-block-level", placeholder = "Url", @required = true, @data_req_message = "Debe ingresar una <strong>Url</strong> para la <strong>Dirección del Menú</strong>." })
            </div>
        </div>
        <div class="row-fluid">
            <div class="span6">
                @Html.Label("Icono", "Icono")
                <select id="Icono" name="Icono" class="input-block-level" data-selectpicker data-size="10" required data-message="Debe seleccionar un &lt;strong&gt;Icono&lt;/strong&gt;." data-live-search="true">
                    <option value="">Seleccione...</option>
                    @foreach (var Icono__ in Iconos)
                    {
                        {
                            var selected = Icono_ == Icono__.Nombre ? "selected" : "";

                            <option data-icon="@Icono__.Nombre mr8" value="@Icono__.Nombre" @selected>@Icono__.Nombre</option>
                        }
                    }
                </select>
            </div>
            <div class="span6">
                @Html.Label("Texto", "Texto")
                @Html.TextBox("Texto", Texto, new {@class = "input-block-level", placeholder = "Texto", @required = true, @data_req_message = "Debe ingresar el <strong>Texto</strong> del Menú."})
            </div>
        </div>
        <div class="row-fluid">
            <div class="span10">
                @Html.Label("Ayuda", "Ayuda")
                @Html.TextBox("Ayuda", Ayuda, new {@class = "input-block-level", placeholder = "Ayuda", @required = true, @data_req_message = "Debe ingresar un Texto para la <strong>Ayuda del Menú</strong>."})
            </div>
            <div class="span2">
                @Html.Label("Orden", "Orden")
                @Html.TextBox("Orden", Orden, new { @class = "input-block-level text-center", placeholder = "Orden", @required = true, @data_req_message = "Debe ingresar Orden del <strong>Menú</strong>." })
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <hr />
        <a href="javascript:void(0);" class="btn btn-warning pull-left" data-dismiss="modal">
            <i class="icon-remove mr8"></i>Cancelar
        </a>
        <a id="btnGuardar" href="javascript:void(0);" class="btn btn-success pull-right">
            <i class="icon-save mr8"></i>Guardar
        </a>
    </div>
</div>

<script>
    $(function () {
        var Modal_ = $("#@Id");
        var Body_ = $(Modal_).find(".modal-body");
        var Id = $(Modal_).find("#Id");
        var MenuId = $(Modal_).find("#MenuId");
        var Url_ = $(Modal_).find("#Url_");
        var Icono = $(Modal_).find("#Icono");
        var Texto = $(Modal_).find("#Texto");
        var Ayuda = $(Modal_).find("#Ayuda");
        var Orden = $(Modal_).find("#Orden");

        var Estado = $(Modal_).find("#Estado");
        var btnGuardar = $(Modal_).find("#btnGuardar");

        $(Estado).bootstrapToggle({
            on: "<i class='icon-ok mr8'></i>Activo",
            off: "<i class='icon-remove mr8'></i>Inactivo",
            onstyle: "success",
            offstyle: "danger",
            width: "100px"
        });

        $(btnGuardar).click(function () {
            var ValidForm = App.ValidateForm(Body_);

            if (ValidForm) {
                App.AjaxCall({
                    Url: '@Url.Action("Form")',
                    Metodo: "POST",
                    ConvertirParametros: true,
                    ParametrosAjax: {
                        Id: $(Id).val(),
                        Menu_Id: $(MenuId).selectpicker("val"),
                        Url_: $(Url_).val(),
                        Icono: $(Icono).val(),
                        Texto: $(Texto).val(),
                        Ayuda: $(Ayuda).val(),
                        Orden: $(Orden).val(),
                        Estado: $(Estado).prop("checked")
                    },
                    Callback: function (Resultado) {
                        if (Resultado && !Resultado.Error && Resultado.Message) {
                            $(modal).on("hidden", function () {
                                $("#btnQuery").click();
                            });

                            $(modal).modal("hide");
                            App.ShowMessage(Resultado.Message, MessageType.Success);
                        }
                        if (Resultado && Resultado.Error && Resultado.Message) App.ShowMessage(Resultado.Message, MessageType.Error);
                    }
                });
            }
        });
    });
</script>
