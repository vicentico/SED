@{
    ViewBag.Titulo = "Menú";
    Layout = "~/Views/Shared/_Main.cshtml";
}

<div class="row-fluid">
    <div class="toolbar">
        <div class="row-fluid mb0">
            <div class="span6">
                @Html.Label("Url", "Dirección (Url)")
                @Html.TextBox("Url", null, new {@class = "input-block-level", @placeholder = "Dirección (Url)"})
            </div>
            <div class="span6">
                @Html.Label("Texto", "Texto")
                @Html.TextBox("Texto", null, new {@class = "input-block-level", @placeholder = "Texto"})
            </div>
        </div>
        <div class="row-fluid mb0">
            <div class="span12">
                @Html.Label("Ayuda", "Ayuda (Tooltip)")
                @Html.TextBox("Ayuda", null, new {@class = "input-block-level", @placeholder = "Ayuda (Tooltip)"})
            </div>
        </div>
        <div class="row-fluid mb0">
            <div class="span12">
                <a href="javascript:void(0);" class="btn btn-warning pull-left" id="btnClear">
                    <i class="icon-eraser pr8"></i>Limpiar
                </a>
                <a href="javascript:void(0);" class="btn btn-primary pull-right" id="btnQuery">
                    <i class="icon-search pr8"></i>Consultar
                </a>
            </div>
        </div>
    </div>
</div>

<div class="row-fluid">
    <div class="span12">
        <table id="GridMenu" class="table table-condensed table-hover table-striped table-bordered table-responsive" data-bootgrid data-case-sensitive="false">
            <thead>
            <tr>
                <th data-column-id="Id" data-identifier="true" data-visible="false" data-visible-in-selection="false" data-searchable="false"></th>
                <th data-header-align="center" data-css-class="text-center text-middle" data-column-id="Acciones">Acciones</th>
                <th data-header-align="center" data-css-class="text-center text-middle" data-column-id="MenuPadre">Menú Padre</th>
                <th data-header-align="center" data-css-class="text-justify text-middle" data-column-id="Url_">Dirección</th>
                <th data-header-align="center" data-css-class="text-center text-middle" data-column-id="Icono">Icono</th>
                <th data-header-align="center" data-css-class="text-center text-middle" data-column-id="Texto">Texto</th>
                <th data-header-align="center" data-css-class="text-center text-middle" data-column-id="Ayuda">Ayuda</th>
                <th data-header-align="center" data-css-class="text-center text-middle" data-column-id="Orden">Orden</th>
            </tr>
            </thead>
        </table>
    </div>
</div>

<script>
    $(function() {
        var btnClear = $("#btnClear");
        var btnQuery = $("#btnQuery");
        var GridMenu = $("#GridMenu");
        var Url = $("#Url");
        var Texto = $("#Texto");
        var Ayuda = $("#Ayuda");

        $(GridMenu).bootgrid({
                customButtons: [
                    {
                        id: "btnNew",
                        tooltip: "Agregar Nuevo Menú",
                        icon: "icon-plus-sign-alt",
                        style: "primary",
                        type: "button"
                    },
                    {
                        id: "btnState",
                        tooltip: "Filtrar por Activo/Inactivo",
                        icon: ["icon-ok", "icon-remove"],
                        style: ["success", "danger"],
                        label: ["Activo", "Inactivo"],
                        type: "toggle",
                        width: 70
                    }
                ]
            })
            .on("loaded.rs.jquery.bootgrid", function(e) {
                e.preventDefault();

                var btnAssignRole = $(this).find(".assignrole");
                var btnEdit = $(this).find(".edit");
                var btnRemove = $(this).find(".remove");

                $(btnAssignRole).click(function (e_) {
                	e_.preventDefault();

                	var Id = $(this).data("id");
                	AssignRole(Id);
                });

                $(btnEdit).click(function(e_) {
                    e_.preventDefault();

                    var Id = $(this).data("id");
                    Edit(Id);
                });

                $(btnRemove).click(function(e_) {
                    e_.preventDefault();

                    var Id = $(this).data("id");
                    Remove(Id);
                });
            });

        $(btnClear).click(function(e) {
            e.preventDefault();

            $(Url).val("");
            $(Texto).val("");
            $(Ayuda).val("");
            $(GridMenu).bootgrid("clear");
            $($.find("#GridMenu_btnState")).bootstrapToggle("on");
        });

        $(btnQuery).click(function(e) {
            e.preventDefault();
            var Estado = $.find("#GridMenu_btnState");

            $(GridMenu).bootgrid("clear");

            App.AjaxCall({
                Url: '@Url.Action("GetMenu")',
                Metodo: 'POST',
                ConvertirParametros: true,
                ParametrosAjax: {
                    Url_: $(Url).val(),
                    Texto: $(Texto).val(),
                    Ayuda: $(Ayuda).val(),
                    Estado: $(Estado).prop("checked")
                },
                Callback: function(Resultado) {
                    if (Resultado && !Resultado.Error && Resultado.Data && Resultado.Data.length > 0) {
                        $(GridMenu).bootgrid("append", Resultado.Data);
                    }
                }
            });
        });

        $(document).on("click", "#GridMenu_btnNew", function(e) {
            e.preventDefault();

            App.ShowModalWithOptions({
                Url: "@Url.Action("Form")"
            });
        });

    	function AssignRole(Id) {
    		var Url_ = "@Url.Action("AssignRole", new { Id = "000" })";
    		Url_ = Url_.replace("000", Id);

    		App.ShowModalWithOptions({
    			Url: Url_
    		});
    	}

       function Edit(Id) {
            var Url_ = "@Url.Action("Form", new {Id = "000"})";
            Url_ = Url_.replace("000", Id);

            App.ShowConfirm({
                Content: "¿Está seguro(a) que desea <strong>Editar</strong> el Usuario?",
                Callback: function() {
                    App.ShowModalWithOptions({
                        Url: Url_
                    });
                }
            });
        }

        function Remove(Id) {
            App.ShowConfirm({
                Content: "¿Está seguro(a) que desea <strong>Borrar</strong> el Usuario?",
                Callback: function() {
                    App.AjaxCall({
                        Url: '@Url.Action("Remove")',
                        Metodo: "POST",
                        ConvertirParametros: true,
                        ParametrosAjax: {
                            Id: Id
                        },
                        Callback: function(Resultado) {
                            if (Resultado && !Resultado.Error && Resultado.Message) {
                                $(btnQuery).click();
                                App.ShowMessage(Resultado.Message, MessageType.Success);
                            }
                            if (Resultado && Resultado.Error && Resultado.Message) App.ShowMessage(Resultado.Message, MessageType.Error);
                        }
                    });
                }
            });
        }
    });
</script>
