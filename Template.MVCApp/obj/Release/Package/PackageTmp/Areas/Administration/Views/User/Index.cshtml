@model dynamic

@{
    ViewBag.Titulo = "Usuario";
    Layout = "~/Views/Shared/_Main.cshtml";
}

<div class="row-fluid">
    <div class="toolbar">
        <div class="row-fluid mb0">
            <div class="span6">
                @Html.Label("Email", "Correo Electrónico")
                @Html.TextBox("Email", null, new { @class = "input-block-level", @placeholder = "Correo Electrónico" })
            </div>
            <div class="span6">
                @Html.Label("Nombre", "Nombre")
                @Html.TextBox("Nombre", null, new {@class = "input-block-level", @placeholder = "Nombre"})
            </div>
        </div>
        <div class="row-fluid mb0">
            <div class="span6">
                @Html.Label("APaterno", "Apellido Paterno")
                @Html.TextBox("APaterno", null, new { @class = "input-block-level", @placeholder = "Apellido Paterno" })
            </div>
            <div class="span6">
                @Html.Label("AMaterno", "Apellido Materno")
                @Html.TextBox("AMaterno", null, new {@class = "input-block-level", @placeholder = "Apellido Materno"})
            </div>
        </div>
        <div class="row-fluid mb0">
            <div class="span12">
                <a href="javascript:void(0);" class="btn btn-warning pull-left" id="btnClear">
                    <i class="icon-eraser pr8"></i>Limpiar
                </a>
                <a href="javascript:void(0);" class="btn btn-primary pull-right" id="btnQuery">
                    <i class="icon-search pr8"></i>Consultar
                </a>
            </div>
        </div>
    </div>
</div>

<div class="row-fluid">
    <div class="span12">
        <table id="GridUsers" class="table table-condensed table-hover table-striped table-bordered table-responsive" data-bootgrid data-case-sensitive="false">
            <thead>
                <tr>
	                <th data-column-id="Id" data-identifier="true" data-visible="false" data-visible-in-selection="false" data-searchable="false"></th>
					<th data-header-align="center" data-css-class="text-center text-middle" data-column-id="Acciones">Acciones</th>
                    <th data-header-align="center" data-css-class="text-center text-middle" data-column-id="Email">Correo Electrónico</th>
                    <th data-header-align="center" data-css-class="text-center text-middle" data-column-id="Nombre">Nombre</th>
                    <th data-header-align="center" data-css-class="text-center text-middle" data-column-id="Apellido_Paterno">Apellido Paterno</th>
                    <th data-header-align="center" data-css-class="text-center text-middle" data-column-id="Apellido_Materno">Apellido Materno</th>
                    <th data-header-align="center" data-css-class="text-center text-middle" data-column-id="Ultimo_Acceso">Último Acceso</th>
                    <th data-header-align="center" data-css-class="text-center text-middle" data-column-id="Debe_Cambiar_Password">Cambiar Contraseña</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

<script>
    $(function() {
        var btnClear = $("#btnClear");
        var btnQuery = $("#btnQuery");
        var GridUsers = $("#GridUsers");
        var Email = $("#Email");
        var Nombre = $("#Nombre");
        var APaterno = $("#APaterno");
        var AMaterno = $("#AMaterno");

        $(GridUsers).bootgrid({
                customButtons: [
                    {
                        id: "btnNew",
                        tooltip: "Agregar Nuevo Usuario",
                        icon: "icon-plus-sign-alt",
                        style: "primary",
                        type: "button"
                    },
                    {
                        id: "btnState",
                        tooltip: "Filtrar por Activo/Inactivo",
                        icon: ["icon-ok", "icon-remove"],
                        style: ["success", "danger"],
                        label: ["Activo", "Inactivo"],
                        type: "toggle",
                        width: 70
                    }
                ]
            })
            .on("loaded.rs.jquery.bootgrid", function(e) {
                e.preventDefault();

                var btnAssignRole = $(this).find(".assignrole");
                var btnRequestPassword = $(this).find(".requestpassword");
                var btnEdit = $(this).find(".edit");
                var btnRemove = $(this).find(".remove");

                $(btnAssignRole).click(function (e_) {
                	e_.preventDefault();

                	var Id = $(this).data("id");
                	AssignRole(Id);
                });

                $(btnRequestPassword).click(function (e_) {
                    e_.preventDefault();

                    var Id = $(this).data("id");
                    RequestPassword(Id);
                });

                $(btnEdit).click(function(e_) {
                    e_.preventDefault();

                    var Id = $(this).data("id");
                    EditUser(Id);
                });

                $(btnRemove).click(function(e_) {
                    e_.preventDefault();

                    var Id = $(this).data("id");
                    RemoveUser(Id);
                });
            });

        $(btnClear).click(function(e) {
            e.preventDefault();

            $(Email).val("");
            $(Nombre).val("");
            $(APaterno).val("");
            $(AMaterno).val("");
            $(GridUsers).bootgrid("clear");
            $($.find("#GridUsers_btnState")).bootstrapToggle("on");
        });

        $(btnQuery).click(function(e) {
            e.preventDefault();
            var Estado = $.find("#GridUsers_btnState");

            $(GridUsers).bootgrid("clear");

            App.AjaxCall({
                Url: '@Url.Action("GetUsers")',
                Metodo: 'POST',
                ConvertirParametros: true,
                ParametrosAjax: {
                    Email: $(Email).val(),
                    Nombre: $(Nombre).val(),
                    APaterno: $(APaterno).val(),
                    AMaterno: $(AMaterno).val(),
                    Estado: $(Estado).prop("checked")
                },
                Callback: function(Resultado) {
                    if (Resultado && !Resultado.Error && Resultado.Data && Resultado.Data.length > 0) {
                        $(GridUsers).bootgrid("append", Resultado.Data);
                    }
                }
            });
        });

        $(document).on("click", "#GridUsers_btnNew", function(e) {
            e.preventDefault();

            App.ShowModalWithOptions({
                Url: "@Url.Action("Form")"
            });
        });

    	function AssignRole(Id) {
    		var Url_ = "@Url.Action("AssignRole", new { UserId = "000" })";
    		Url_ = Url_.replace("000", Id);

    		App.ShowModalWithOptions({
    			Url: Url_
    		});
    	}

        function RequestPassword(Id) {
            var Url_ = "@Url.Action("RequestPassword", new {Id = "000"})";
            Url_ = Url_.replace("000", Id);

            App.ShowModalWithOptions({
                Url: Url_
            });
        }

        function EditUser(Id) {
            var Url_ = "@Url.Action("Form", new {Id = "000"})";
            Url_ = Url_.replace("000", Id);

            App.ShowConfirm({
                Content: "¿Está seguro(a) que desea <strong>Editar</strong> el Usuario?",
                Callback: function() {
                    App.ShowModalWithOptions({
                        Url: Url_
                    });
                }
            });
        }

        function RemoveUser(Id) {
            App.ShowConfirm({
                Content: "¿Está seguro(a) que desea <strong>Borrar</strong> el Usuario?",
                Callback: function() {
                    App.AjaxCall({
                        Url: '@Url.Action("Remove")',
                        Metodo: "POST",
                        ConvertirParametros: true,
                        ParametrosAjax: {
                            Id: Id
                        },
                        Callback: function(Resultado) {
                            if (Resultado && !Resultado.Error && Resultado.Message) {
                                $(btnQuery).click();
                                App.ShowMessage(Resultado.Message, MessageType.Success);
                            }
                            if (Resultado && Resultado.Error && Resultado.Message) App.ShowMessage(Resultado.Message, MessageType.Error);
                        }
                    });
                }
            });
        }
    });
</script>
